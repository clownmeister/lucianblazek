on:
  workflow_run:
    workflows: ["Deploy"]
    types: [requested]
    branches:
      - master
  push:
    branches:
      - master
name: ðŸš€ Deploy with FTP
jobs:
  web-deploy:
    name: ðŸŽ‰ Deploy
    runs-on: ubuntu-latest
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      fail-fast: false
      matrix:
        php: [ 8.1 ]
        node: [ 19 ]
        experimental: [ false ]
        include:
          - composer-options: "--no-dev --ignore-platform-reqs"

    steps:
      - name: ðŸšš Get latest code
        uses: actions/checkout@v3

      - name: Set up PHP ${{ matrix.php }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}

      - name: ðŸ”¨ Install dependencies with Composer
        uses: ramsey/composer-install@v2
        with:
          dependency-versions: ${{ matrix.dependencies }}
          composer-options: ${{ matrix.composer-options }}

      - name: Set up Node.js ${{ matrix.node }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}

      - name: ðŸ”¨ Build Project
        run: |
          yarn install
          yarn build-prod

      - name: Adding Vendor
        run: echo "vendor/:composer.lock" > .git-ftp-include

      - name: Move public to www
        run: mv ./public ./www

      - name: ðŸ“‚ Sync files
        uses: SamKirkland/FTP-Deploy-Action@4.3.3
        with:
          server: ${{ secrets.ftp_server }}
          username: ${{ secrets.ftp_user }}
          password: ${{ secrets.ftp_password }}
          exclude: |
            **/.git*
            **/.git*/**
            **/node_modules/**
            **/docker/**
            **/logs/**
            **/var/**
            **/assets/**
            **/tests/**
            .env
            .eslint
            docker-compose.yml
            phpcs.xml
            phpstan.neon
            phpunit.xml
            README.md
            test.babelrc
            tsconfig.json
            webpack.config.js
            Makefile
